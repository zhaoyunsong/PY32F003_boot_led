<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\PY32F003_boot.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\PY32F003_boot.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Jun 08 22:10:21 2025
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; Bootloader_ProtocolDetection &rArr; ExtendedErase &rArr; MassErase &rArr; SectorErase
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_COMP_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[14]">LPTIM1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from system_py32f0xx.o(i.SystemInit) referenced from startup_py32f003xx.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1a]">USART1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1b]">USART2_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32f003xx.o(.text)
 <LI><a href="#[1c]">main</a> from system_py32f0xx.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[40]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[41]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[42]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[21]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[43]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[44]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[45]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_py32f0xx.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; $Super$$main &rArr; Bootloader_ProtocolDetection &rArr; ExtendedErase &rArr; MassErase &rArr; SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[25]"></a>APP_SystemClockConfig</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bootloader.o(i.APP_SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_SystemClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[27]"></a>Bootloader_Init</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, bootloader.o(i.Bootloader_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Bootloader_Init &rArr; Set_PB5_Level
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Refresh
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendByte
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToAddress
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinPull
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetAFPin_0_7
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB5_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[30]"></a>Bootloader_ProtocolDetection</STRONG> (Thumb, 498 bytes, Stack size 24 bytes, bootloader.o(i.Bootloader_ProtocolDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Bootloader_ProtocolDetection &rArr; ExtendedErase &rArr; MassErase &rArr; SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOption
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendByte
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteProtect
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMemory
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemory
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendedErase
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[35]"></a>ExtendedErase</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, bootloader.o(i.ExtendedErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ExtendedErase &rArr; MassErase &rArr; SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SectorErase
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageErase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MassErase
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXOR
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[3c]"></a>GetAddressArea</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, bootloader.o(i.GetAddressArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetAddressArea &rArr; USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendByte
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXOR
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMemory
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemory
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go
</UL>

<P><STRONG><a name="[39]"></a>GetXOR</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bootloader.o(i.GetXOR))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteProtect
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMemory
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendedErase
</UL>

<P><STRONG><a name="[33]"></a>Go</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bootloader.o(i.Go))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Go &rArr; GetAddressArea &rArr; USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToAddress
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[2a]"></a>JumpToAddress</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bootloader.o(i.JumpToAddress))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[26]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_ll_utils.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[38]"></a>MassErase</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, flash.o(i.MassErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MassErase &rArr; SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendedErase
</UL>

<P><STRONG><a name="[3a]"></a>PageErase</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, flash.o(i.PageErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PageErase
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendedErase
</UL>

<P><STRONG><a name="[32]"></a>ReadMemory</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, bootloader.o(i.ReadMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadMemory &rArr; GetAddressArea &rArr; USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendByte
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[3b]"></a>SectorErase</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, flash.o(i.SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MassErase
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendedErase
</UL>

<P><STRONG><a name="[29]"></a>Set_PB5_Level</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, main.o(i.Set_PB5_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Set_PB5_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_py32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>USART_ReadByte</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(i.USART_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteProtect
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMemory
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemory
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtendedErase
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[2f]"></a>USART_SendByte</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(i.USART_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOption
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemory
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[28]"></a>WDG_Init</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, wdg.o(i.WDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[2b]"></a>WDG_Refresh</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wdg.o(i.WDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendByte
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SectorErase
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageErase
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[3e]"></a>WriteFlash</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, flash.o(i.WriteFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WriteFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMemory
</UL>

<P><STRONG><a name="[34]"></a>WriteMemory</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, bootloader.o(i.WriteMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteMemory &rArr; WriteOption &rArr; USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOption
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXOR
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[46]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[37]"></a>WriteOption</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, flash.o(i.WriteOption))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteOption &rArr; USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteProtect
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMemory
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[36]"></a>WriteProtect</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, bootloader.o(i.WriteProtect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WriteProtect &rArr; WriteOption &rArr; USART_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOption
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadByte
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXOR
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[47]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[48]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[24]"></a>$Super$$main</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = $Super$$main &rArr; Bootloader_ProtocolDetection &rArr; ExtendedErase &rArr; MassErase &rArr; SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_ProtocolDetection
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB5_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2d]"></a>LL_GPIO_SetAFPin_0_7</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bootloader.o(i.LL_GPIO_SetAFPin_0_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetAFPin_0_7
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[2c]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bootloader.o(i.LL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[2e]"></a>LL_GPIO_SetPinPull</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bootloader.o(i.LL_GPIO_SetPinPull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetPinPull
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[3d]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bootloader.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToAddress
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
